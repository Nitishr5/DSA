#include <iostream>
using namespace std;

class Queue {
    int* arr;
    int front;
    int rear;
    int capacity;

public:
    Queue(int size) {
        capacity = size;
        arr = new int[capacity];
        front = 0;
        rear = 0;
    }

    void enqueue(int x) {
        if (rear == capacity) {
            cout << "Queue is Full\n";
            return;
        }
        arr[rear++] = x;
    }

    void dequeue() {
        if (front == rear) {
            cout << "Queue is Empty\n";
            return;
        }
        cout << "Dequeued: " << arr[front++] << endl;
    }

    int getFront() {
        if (front == rear) {
            cout << "Queue is Empty\n";
            return -1;
        }
        return arr[front];
    }

    bool isEmpty() {
        return front == rear;
    }

    int size() {
        return rear - front;
    }

    ~Queue() {
        delete[] arr;
    }
};

int main() {
    Queue q(5);
    q.enqueue(5);
    q.enqueue(10);
    q.enqueue(15);

    cout << "Front: " << q.getFront() << endl;

    q.dequeue();
    cout << "Front after dequeue: " << q.getFront() << endl;

    cout << "Queue size: " << q.size() << endl;
    cout << "Is Empty: " << (q.isEmpty() ? "Yes" : "No") << endl;

    return 0;
}
