Input: s = "aabc"
Output: "a#bb"
Explanation: For every ith character we will consider the string from index 0 till index i first non repeating character is as follow- "a" - first non-repeating character is 'a' "aa" - no non-repeating character so '#' "aab" - first non-repeating character is 'b' "aabc" - there are two non repeating characters 'b' and 'c',  first non-repeating character is 'b' because 'b' comes before 'c' in the stream.






class Solution {
  public:
    string FirstNonRepeating(string &A) {
        // Code here
        unordered_map<char,int> count;
        queue<int> q;
        string ans="";
        
        for(int i=0;i<A.length();i++){
            char ch=A[i];
            
            //increase count
            count[ch]++;
            
            //queue me push karo
            q.push(ch);
            
            while(!q.empty()){
                if(count[q.front()]>1){
                    //repeating charecter
                    q.pop();
                }
                else{
                    //non-repeating charecter milgya
                    ans.push_back(q.front());
                    break;
                }
            }
            if(q.empty())
                ans.push_back('#');
        }
        return ans;
    }
};
