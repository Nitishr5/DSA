THIS IS BRUT FORCE ================>

#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "Enter number of elements: ";
    cin >> n;

    int arr[n];
    cout << "Enter " << n << " elements:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    bool duplicateFound = false;

    // Brute-force check using nested loops
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            if (arr[i] == arr[j]) {
                duplicateFound = true;
                break;
            }
        }
        if (duplicateFound)
            break;
    }

    if (duplicateFound)
        cout << "Duplicates found\n";
    else
        cout << "All unique\n";

    return 0;
}













OPTIMAL USING unordered_set ===================================================


#include <iostream>
#include <unordered_set>
using namespace std;

int main() {
    int n;
    cout << "Enter number of elements: ";
    cin >> n;

    int arr[n];
    cout << "Enter " << n << " elements:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    unordered_set<int> seen;
    bool duplicateFound = false;

    for (int i = 0; i < n; i++) {
        if (seen.find(arr[i]) != seen.end()) {
            duplicateFound = true;
            break;
        }
        seen.insert(arr[i]);
    }

    if (duplicateFound)
        cout << "Duplicates found\n";
    else
        cout << "All unique\n";

    return 0;
}
