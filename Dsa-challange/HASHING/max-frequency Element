#include <iostream>
#include <unordered_map>
using namespace std;

int main() {
    int arr[] = {1, 3, 2, 3, 4, 3, 2};
    int n = sizeof(arr) / sizeof(arr[0]);

    unordered_map<int, int> freq;

    // Step 1: Count frequency of each element
    for (int i = 0; i < n; ++i) {
        freq[arr[i]]++;
    }

    // Step 2: Find element with max frequency
    int maxFreq = 0;
    int element = -1;

    for (auto it : freq) {
        if (it.second > maxFreq) {
            maxFreq = it.second;
            element = it.first;
        }
    }

    cout << "Element with max frequency: " << element << " (" << maxFreq << " times)" << endl;

    return 0;
}









(* BRUT FOORCE USING NORMAL FOR LOOP=======================================>>>>>>>>>>> *)



#include <iostream>
using namespace std;

int main() {
    int arr[] = {1, 3, 2, 3, 4, 3, 2};
    int n = sizeof(arr) / sizeof(arr[0]);

    int maxFreq = 0;
    int maxElement = -1;

    for (int i = 0; i < n; i++) {
        int count = 0;
        
        for (int j = 0; j < n; j++) {
            if (arr[i] == arr[j]) {
                count++;
            }
        }

        if (count > maxFreq) {
            maxFreq = count;
            maxElement = arr[i];
        }
    }

    cout << "Element with max frequency: " << maxElement << " (" << maxFreq << " times)" << endl;

    return 0;
}
