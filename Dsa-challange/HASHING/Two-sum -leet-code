 

Example 1:

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1]



class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int>mp;

        for(int i=0;i<nums.size();i++)
        {
            int complete=target-nums[i];

            if(mp.find(complete)!=mp.end()){
                return {mp[complete],i};
            }
            mp[nums[i]]=i;
        }
        return {};
    }
};
