25. Reverse Nodes in k-Group  

using recursion solve

Input: head = [1,2,3,4,5], k = 2
Output: [2,1,4,3,5]

Input: head = [1,2,3,4,5], k = 3
Output: [3,2,1,4,5]

1 case hm solve karenge baaki recursion sambhal lega..


class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
         // Step 0: Check if there are at least k nodes to reverse
         ListNode* temp = head;
        int count=0;
        
        while (temp != NULL && count < k) {
            temp = temp->next;
            count++;
        }

         // If less than k nodes remain, do NOT reverse
        if (count < k) {
            return head;
        }
         

        //step1: reverse first k nodes
        ListNode* next=NULL;
        ListNode* curr=head;
       ListNode* prev=NULL;
         count=0;

        while(curr!=NULL && count<k){
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
            count++;
        }
 
       

        //step2: Recursion sambhal lega aage ka

        if(next!=NULL){
            head->next=reverseKGroup(next,k);
        }
        //step3:return head of reversed List
        return prev;
    }
};
