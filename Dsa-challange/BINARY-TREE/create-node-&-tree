✅ 1. Node Class
Each node contains:

Data (int)

Left child pointer

Right child pointer



class Node {
public:
    int data;
    Node* left;
    Node* right;

    Node(int value) {
        data = value;
        left = nullptr;
        right = nullptr;
    }
};

  ✅ Step 2: Build a Simple Tree Manually

int main() {
    // Manually creating the tree
    Node* root = new Node(1);       // Root node
    root->left = new Node(2);       // Left child of root
    root->right = new Node(3);      // Right child of root
    root->left->left = new Node(4); // Left child of node 2
    root->left->right = new Node(5);// Right child of node 2

    // Simple print to verify
    cout << "Root Node: " << root->data << endl;
    cout << "Left Child of Root: " << root->left->data << endl;
    cout << "Right Child of Root: " << root->right->data << endl;

    return 0;
}



  their output is=====>>>>


Let’s create the following tree:


        1
       / \
      2   3
     / \
    4   5



  
