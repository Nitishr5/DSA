THIS IS  NOT OPTIMAL SOLUTION CHECK OPTIMAL SOLUTION IN BOTTON..



class Solution {
public:
bool isSame(TreeNode* s, TreeNode* t) {
    if (!s && !t) return true;
    if (!s || !t) return false;
    return (s->val == t->val) &&
           isSame(s->left, t->left) &&
           isSame(s->right, t->right);
}

// Main function to check if subroot is a subtree of Root
    bool isSubtree(TreeNode* s, TreeNode* t) {
       if(!s) return false;
       if(isSame(s,t)) return true;

       return isSubtree(s->left,s) || isSubtree(t->right,t);
    }
};
